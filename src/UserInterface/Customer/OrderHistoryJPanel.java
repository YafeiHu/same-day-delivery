/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import Business.Order.Order;
import Business.Order.OrderItem;
import Business.System.AmazonSystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hyf
 */
public class OrderHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form OrderHistoryJPanel
     */
    JPanel userProcessContainer;
    UserAccount user;
    AmazonSystem system;

    public OrderHistoryJPanel(JPanel userProcessContainer, UserAccount user, AmazonSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.user = user;
        popOrderTable();
    }

    public void popOrderTable() {
        int rowCount = orderhistoryJTable1.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) orderhistoryJTable1.getModel()).removeRow(i);
        }


        for (Order o : user.getOrderHistory().getOrders()) {
            System.out.println(o.getOrderNum());
            Object row[] = new Object[7];
            row[0] = o;
            row[1] = o.getSubtotalPrice();
            row[2] = o.tax();
            row[3] = o.shipping();
            row[4] = o.totalMoney();
            row[5] = o.getOrderDate();
            row[6] = o.getShipment().getStatus();

            ((DefaultTableModel) orderhistoryJTable1.getModel()).addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        orderhistoryJTable1 = new javax.swing.JTable();
        receiveJButton1 = new javax.swing.JButton();
        receiveJButton3 = new javax.swing.JButton();
        receiveJButton4 = new javax.swing.JButton();
        receiveJButton5 = new javax.swing.JButton();
        backjButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        orderhistoryJTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        orderhistoryJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order number", "subtotal", "tax", "shipping fee", "Order total", "Order time", "status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderhistoryJTable1);

        receiveJButton1.setBackground(new java.awt.Color(255, 51, 0));
        receiveJButton1.setFont(new java.awt.Font("宋体", 1, 12)); // NOI18N
        receiveJButton1.setForeground(new java.awt.Color(255, 255, 255));
        receiveJButton1.setText("receive");
        receiveJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiveJButton1ActionPerformed(evt);
            }
        });

        receiveJButton3.setBackground(new java.awt.Color(255, 51, 0));
        receiveJButton3.setFont(new java.awt.Font("宋体", 1, 12)); // NOI18N
        receiveJButton3.setForeground(new java.awt.Color(255, 255, 255));
        receiveJButton3.setText("service");
        receiveJButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiveJButton3ActionPerformed(evt);
            }
        });

        receiveJButton4.setBackground(new java.awt.Color(255, 51, 0));
        receiveJButton4.setFont(new java.awt.Font("宋体", 1, 12)); // NOI18N
        receiveJButton4.setForeground(new java.awt.Color(255, 255, 255));
        receiveJButton4.setText("return");
        receiveJButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiveJButton4ActionPerformed(evt);
            }
        });

        receiveJButton5.setBackground(new java.awt.Color(255, 51, 0));
        receiveJButton5.setFont(new java.awt.Font("宋体", 1, 12)); // NOI18N
        receiveJButton5.setForeground(new java.awt.Color(255, 255, 255));
        receiveJButton5.setText("view shipment");
        receiveJButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiveJButton5ActionPerformed(evt);
            }
        });

        backjButton1.setBackground(new java.awt.Color(0, 153, 0));
        backjButton1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        backjButton1.setForeground(new java.awt.Color(255, 255, 255));
        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(receiveJButton1)
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(receiveJButton3)
                                .addGap(72, 72, 72)
                                .addComponent(receiveJButton4)
                                .addGap(40, 40, 40)
                                .addComponent(receiveJButton5)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiveJButton1)
                    .addComponent(receiveJButton3)
                    .addComponent(receiveJButton4)
                    .addComponent(receiveJButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(backjButton1)
                .addGap(65, 65, 65))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void receiveJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiveJButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderhistoryJTable1.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        Order order = (Order) orderhistoryJTable1.getValueAt(selectedRow, 0);
        ReviewJPanel rjp = new ReviewJPanel(userProcessContainer, order, user, system);
        userProcessContainer.add("ManageSuppliersJPanel", rjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_receiveJButton1ActionPerformed

    private void receiveJButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiveJButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderhistoryJTable1.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        Order order = (Order) orderhistoryJTable1.getValueAt(selectedRow, 0);
        Date d = new Date();
        System.out.println(d.getTime()+"timeeeeee");
        System.out.println(order.getShipment().getShipDate().getTime() + 30 * 24 * 60 * 60 * 1000+"timeeeeee");
        System.out.println(order.getShipment().getShipDate().getTime()+"timeeeeee");
        if (d.getTime() >order.getShipment().getShipDate().getTime()+ 30 * 24 * 60 * 60 * 10000) {
            JOptionPane.showMessageDialog(this, "Missed the dead line!");
        } else {
            ItemForServiceJPanel ifsjp = new ItemForServiceJPanel(userProcessContainer, order, user, system);
            userProcessContainer.add("ManageSuppliersJPanel", ifsjp);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_receiveJButton3ActionPerformed

    private void receiveJButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiveJButton5ActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderhistoryJTable1.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        Order order = (Order) orderhistoryJTable1.getValueAt(selectedRow, 0);
        SubOrderJPanel vojp = new SubOrderJPanel(userProcessContainer, order, user, system);
        userProcessContainer.add("ManageSuppliersJPanel", vojp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_receiveJButton5ActionPerformed

    private void receiveJButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiveJButton4ActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderhistoryJTable1.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        Order order = (Order) orderhistoryJTable1.getValueAt(selectedRow, 0);
        ViewOrderJPanel vojp = new ViewOrderJPanel(userProcessContainer, order, user, system);
        userProcessContainer.add("ManageSuppliersJPanel", vojp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_receiveJButton4ActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderhistoryJTable1;
    private javax.swing.JButton receiveJButton1;
    private javax.swing.JButton receiveJButton3;
    private javax.swing.JButton receiveJButton4;
    private javax.swing.JButton receiveJButton5;
    // End of variables declaration//GEN-END:variables
}
