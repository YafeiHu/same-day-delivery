/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import Business.Enterprise.Enterprise;
import Business.Enterprise.Supplier;
import Business.Network.Network;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Organization.Organization;
import Business.Organization.WarehouseOrganization;
import Business.Product.Product;
import Business.Product.ProductDirectory;
import Business.System.AmazonSystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hyf
 */
public class CheckOutJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CheckOutJPanel
     */
    JPanel userProcessContainer;
    UserAccount user;
    AmazonSystem system;
    ArrayList<String> resultStores;
    Order order;
    Network network;
    Supplier supplier;

    public CheckOutJPanel(JPanel userProcessContainer, UserAccount user, AmazonSystem system, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.user = user;
        this.network = network;
        this.system = system;
        order = new Order();
        order.setCustomer(user);
        popOrderTable();

    }

    public void popOrderTable() {
        int rowCount = orderJTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) orderJTable.getModel()).removeRow(i);
        }

        for (OrderItem o : order.getOrder()) {
            Object row[] = new Object[4];
            orderJTable.getColumnModel().getColumn(0).setCellRenderer(new TableImageCell());
            row[0] = new ImageIcon(o.getProduct().getPicture());
            row[1] = o;
            row[2] = o.getNumber();
            row[3] = o.getProduct().getPrice();

            ((DefaultTableModel) orderJTable.getModel()).addRow(row);
        }

    }

    class TableImageCell extends DefaultTableCellRenderer {

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setIcon(null);
            setBorder(null);
            if (isSelected) {
                setForeground(Color.orange);
            }
            if (value instanceof ImageIcon) {
                setIcon((Icon) value);
            } else if (value instanceof String) {
                setText((String) value);
            } else {
                setText("");
            }
            return this;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addJButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        totalJTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();
        backjButton1 = new javax.swing.JButton();
        checkoutJButton = new javax.swing.JButton();

        addJButton.setText("update");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("total price");

        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "picture", "product name", "number", "sold price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderJTable.setRowHeight(50);
        orderJTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        orderJTable.setSelectionForeground(new java.awt.Color(255, 51, 0));
        jScrollPane2.setViewportView(orderJTable);

        backjButton1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        backjButton1.setText("<< cancel");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });

        checkoutJButton.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        checkoutJButton.setText(" submit >>");
        checkoutJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(653, Short.MAX_VALUE)
                .addComponent(backjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(checkoutJButton)
                .addGap(95, 95, 95))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addJButton)
                            .addComponent(jLabel5))
                        .addGap(48, 48, 48)
                        .addComponent(totalJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addJButton)
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 494, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutJButton)
                    .addComponent(backjButton1))
                .addGap(84, 84, 84))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderJTable.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        if (orderJTable.isEditing()) {
            int row = orderJTable.getEditingRow();
            int col = orderJTable.getEditingColumn();
            orderJTable.getCellEditor(row, col).stopCellEditing();
            OrderItem orderItem=(OrderItem) orderJTable.getValueAt(selectedRow,0);
            orderItem.setNumber((int) orderJTable.getValueAt(row, col));
            System.out.println(orderItem.getNumber());
        }
        
        ///////////////  orderItem.setNumber(Integer.parseInt(orderJTable.getValueAt(selectedRow, 2)));
    }//GEN-LAST:event_addJButtonActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void checkoutJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutJButtonActionPerformed
        // TODO add your handling code here:
        // order.quantity();
    /*    ShippingJPanel pjp = new ShippingJPanel(userProcessContainer, order, system);
        userProcessContainer.add("ViewProductDetailJPanel", pjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);*/
    }//GEN-LAST:event_checkoutJButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton checkoutJButton;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderJTable;
    private javax.swing.JTextField totalJTextField;
    // End of variables declaration//GEN-END:variables
}
