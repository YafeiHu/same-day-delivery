/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerServiceRole;

import UserInterface.SystemAdmin.*;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.WarehouseLoction.WarehouseLocation;
import Business.FinanceAccount.FinanceAccount;
import Business.FinanceAccount.TrasactionAccount;
import Business.Organization.AdminOrganization;
import Business.Organization.Organization;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import Business.Network.Network;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Organization.AccountingOrganization;
import Business.Organization.CustomerServiceOrganization;
import Business.Organization.ShipOrganization;
import Business.Organization.SysFinanceOrganization;
import Business.Organization.SystemAdminOrganization;
import Business.Payment.Payment;
import Business.System.AmazonSystem;
import Business.WorkQueue.ChangeRequest;
import Business.WorkQueue.RegisterRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hyf
 */
public class ChangeRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    JPanel userProcessContainer;
    CustomerServiceOrganization organization;
    UserAccount account;
    AmazonSystem system;

    public ChangeRequestJPanel(JPanel userProcessContainer, UserAccount account, CustomerServiceOrganization organization, AmazonSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.system = system;
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) returnJTable1.getModel();
        model.setRowCount(0);
        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof ChangeRequest) {
                Object[] row = new Object[6];
                row[0] = (ChangeRequest) request;
                row[1] = ((ChangeRequest) request).getReason();
                row[2] = ((ChangeRequest) request).getDescribe();
                row[3] = ((ChangeRequest) request).getSender();
                row[4] = ((ChangeRequest) request).getRequestDate();
                row[5] = ((ChangeRequest) request).getStatus();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        returnJTable1 = new javax.swing.JTable();
        approve = new javax.swing.JButton();
        approve1 = new javax.swing.JButton();
        backjButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        returnJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Item", "reason", "describe", "sender", "send date", "status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(returnJTable1);

        approve.setBackground(new java.awt.Color(255, 51, 0));
        approve.setFont(new java.awt.Font("宋体", 1, 12)); // NOI18N
        approve.setForeground(new java.awt.Color(255, 255, 255));
        approve.setText("approve");
        approve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveActionPerformed(evt);
            }
        });

        approve1.setBackground(new java.awt.Color(0, 102, 255));
        approve1.setFont(new java.awt.Font("宋体", 1, 12)); // NOI18N
        approve1.setForeground(new java.awt.Color(255, 255, 255));
        approve1.setText("reject");
        approve1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approve1ActionPerformed(evt);
            }
        });

        backjButton1.setBackground(new java.awt.Color(0, 153, 0));
        backjButton1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        backjButton1.setForeground(new java.awt.Color(255, 255, 255));
        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(approve)
                        .addGap(64, 64, 64)
                        .addComponent(approve1)))
                .addContainerGap(195, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(approve)
                    .addComponent(approve1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                .addComponent(backjButton1)
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void approveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveActionPerformed

        int selectedRow = returnJTable1.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        ChangeRequest request = (ChangeRequest) returnJTable1.getValueAt(selectedRow, 0);
        request.setStatus("agreed");
        request.setReceiver(account);
        request.setResolveDate(new Date());
        populateTable();
    }//GEN-LAST:event_approveActionPerformed

    private void approve1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approve1ActionPerformed
        // TODO add your handling code here:
         int selectedRow = returnJTable1.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        ChangeRequest request = (ChangeRequest) returnJTable1.getValueAt(selectedRow, 0);
        request.setStatus("rejected");
        request.setResolveDate(new Date());
        request.setReceiver(account);
        populateTable();
    }//GEN-LAST:event_approve1ActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approve;
    private javax.swing.JButton approve1;
    private javax.swing.JButton backjButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable returnJTable1;
    // End of variables declaration//GEN-END:variables
}
