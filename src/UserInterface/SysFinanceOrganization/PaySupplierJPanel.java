/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SysFinanceOrganization;

import Business.Enterprise.Supplier;
import Business.FinanceAccount.FinanceAccount;
import Business.FinanceAccount.TrasactionAccount;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Organization.FinanceOrganization;
import Business.Organization.SysFinanceOrganization;
import Business.Organization.Organization;
import Business.Organization.ShipOrganization;
import Business.Payment.Payment;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hyf
 */
public class PaySupplierJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PaySupplierJPanel
     */
    JPanel userProcessContainer;
    UserAccount user;
    SysFinanceOrganization financeOrganization;

    public PaySupplierJPanel(JPanel userProcessContainer, UserAccount user, SysFinanceOrganization financeOrganization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.user = user;
        this.financeOrganization = financeOrganization;
        populateTable();
        
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) orderJTable.getModel();
        model.setRowCount(0);
        for (Order order : financeOrganization.getOrderlist().getOrders()) {
            if (order.getShipment().getStatus().equals("received")) {
                Object[] row = new Object[2];
                row[0] = order;
                row[1] = order.getStatus();
                model.addRow(row);
            }

        }
    }

 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();
        refreshTestJButton = new javax.swing.JButton();
        showJTextField1 = new javax.swing.JTextField();
        refreshTestJButton1 = new javax.swing.JButton();
        backjButton3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "order number", "order status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderJTable);

        refreshTestJButton.setBackground(new java.awt.Color(255, 51, 0));
        refreshTestJButton.setFont(new java.awt.Font("宋体", 1, 12)); // NOI18N
        refreshTestJButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshTestJButton.setText("pay");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });

        refreshTestJButton1.setBackground(new java.awt.Color(0, 102, 255));
        refreshTestJButton1.setFont(new java.awt.Font("宋体", 1, 12)); // NOI18N
        refreshTestJButton1.setForeground(new java.awt.Color(255, 255, 255));
        refreshTestJButton1.setText("show");
        refreshTestJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButton1ActionPerformed(evt);
            }
        });

        backjButton3.setBackground(new java.awt.Color(0, 153, 0));
        backjButton3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        backjButton3.setForeground(new java.awt.Color(255, 255, 255));
        backjButton3.setText("<< Back");
        backjButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(showJTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(refreshTestJButton)))
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(refreshTestJButton1)
                    .addComponent(backjButton3))
                .addGap(71, 71, 71))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(showJTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(refreshTestJButton)
                            .addComponent(refreshTestJButton1))
                        .addGap(85, 85, 85)
                        .addComponent(backjButton3)
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed
        int selectedRow = orderJTable.getSelectedRow();
        Order order = (Order) orderJTable.getValueAt(selectedRow, 0);
        TrasactionAccount testSupplierAccount = null;
        for (FinanceAccount financeAccount : financeOrganization.getFinanceAccountDirectory().getFinanceAccountList()) {
            if (financeAccount instanceof TrasactionAccount) {
                testSupplierAccount = (TrasactionAccount) financeAccount;
                ///////////////////
                showJTextField1.setText(String.valueOf(testSupplierAccount.getRemaining()));
            }
        }
        FinanceOrganization supplierFinanceOrganization = null;
        for (OrderItem item : order.getOrder()) {
            Supplier supplier = item.getProduct().getSupplier();
            for (Organization o : supplier.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof FinanceOrganization) {
                    supplierFinanceOrganization = (FinanceOrganization) o;
                    for (FinanceAccount f : supplierFinanceOrganization.getFinanceAccountDirectory().getFinanceAccountList()) {
                        if (f instanceof TrasactionAccount) {
                            Payment payment = new Payment();
                            payment.setTotal(((supplier.getProfit() * order.getSeparateTotal(supplier)) + order.singelShipping()) / order.getPayment().getLength());
                            payment.setSendFinanceAccount(testSupplierAccount);
                            payment.setReceiveFinanceAccount(f);
                            f.increaseRemaining(payment.getTotal());
                            testSupplierAccount.reduceRemaining(payment.getTotal());
                            financeOrganization.getPaymentDirectory().add(payment);
                            supplierFinanceOrganization.getPaymentDirectory().add(payment);
                        }
                    }
                }
            }
        }
        order.setStatus("trasaction ");
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void refreshTestJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButton1ActionPerformed
        // TODO add your handling code here:
        TrasactionAccount testSupplierAccount = null;
        for (FinanceAccount financeAccount : financeOrganization.getFinanceAccountDirectory().getFinanceAccountList()) {
            if (financeAccount instanceof TrasactionAccount) {
                testSupplierAccount = (TrasactionAccount) financeAccount;
                ///////////////////
                showJTextField1.setText(String.valueOf(testSupplierAccount.getRemaining()));
            }
        }
    }//GEN-LAST:event_refreshTestJButton1ActionPerformed

    private void backjButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton3ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton3ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderJTable;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JButton refreshTestJButton1;
    private javax.swing.JTextField showJTextField1;
    // End of variables declaration//GEN-END:variables
}
